version: '3'

services:
  php_server:
    image: liuguangw/docker-php:latest
    container_name: php_server
    hostname: php_server
    restart: always
    volumes:
      - ./app/config/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./app/sites:/var/www/sites
    working_dir: /var/www/sites
    environment:
      DB_HOST: db_server
      REDIS_HOST: redis_server
      COMPOSER_MIRROR_URL: ${COMPOSER_MIRROR_URL}
      TZ: ${TIME_ZONE}
    depends_on:
      - db_server
      - redis_server

  nginx:
    image: nginx:${NGINX_IMAGE_VERSION}
    container_name: nginx
    hostname: nginx
    restart: always
    volumes:
      - ./app/config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./app/config/nginx/phpfpm.conf:/etc/nginx/phpfpm.conf:ro
      - ./app/config/nginx/ssl.conf:/etc/nginx/ssl.conf:ro
      - ./app/config/nginx/vhost:/etc/nginx/vhost:ro
      - ./app/config/nginx/ssl:/etc/nginx/ssl:ro #ssl证书相关目录
      - ./app/sites:/var/www/sites:ro
      - ./logs/nginx_logs:/var/log/nginx/logs
    working_dir: /var/log/nginx
    environment:
      TZ: ${TIME_ZONE}
    depends_on:
      - php_server
    ports:
      - "80:80"
      - "443:443"

  db_server:
    image: mysql:${MYSQL_IMAGE_VERSION}
    container_name: db_server
    hostname: db_server
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      TZ: ${TIME_ZONE}
    volumes:
      - ./app/config/mysql/my.cnf:/etc/mysql/conf.d/mydb.cnf:ro
      - ./app/db_data:/var/lib/mysql
      - ./app/tmp:/home/tmp #用于备份还原时,存放sql文件的临时目录
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE

  redis_server:
    image: redis:${REDIS_IMAGE_VERSION}
    container_name: redis_server
    hostname: redis_server
    restart: always
    command: /etc/redis/redis.conf
    environment:
      TZ: ${TIME_ZONE}
    volumes:
      - ./app/config/redis.conf:/etc/redis/redis.conf:ro
      - ./app/redis_data:/data/redis_data
